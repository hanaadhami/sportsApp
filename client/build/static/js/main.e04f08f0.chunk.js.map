{"version":3,"sources":["utils/Auth.js","components/HomePage.jsx","components/Routes.jsx","components/LoginForm.jsx","utils/API.js","pages/LoginPage.jsx","pages/LogoutFunction.jsx","components/SignUpForm.jsx","pages/SignUpPage.jsx","components/Dashboard.jsx","pages/DashboardPage.jsx","App.js","index.js"],"names":["Auth","token","localStorage","setItem","getItem","removeItem","HomePage","this","props","toggleAuthenticateStatus","Card","className","CardHeader","title","subtitle","isUserAuthenticated","CardContent","style","fontSize","color","React","Component","PrivateRoute","component","rest","render","to","pathname","state","from","location","LoggedOutRoute","PropsRoute","LoginForm","onSubmit","onChange","errors","successMessage","user","action","summary","TextField","floatingLabelText","name","errorText","email","value","type","password","Button","label","primary","userData","axios","post","get","headers","Authorization","LoginPage","processForm","event","preventDefault","API","then","res","authenticateUser","data","history","push","catch","response","message","setState","changeUser","field","target","storedMessage","contextTypes","router","PropTypes","object","isRequired","LogoutFunction","deauthenticateUser","SignUpForm","variant","SignUpPage","Dashboard","secretData","DashboardPage","getToken","App","authenticated","muiTheme","getMuiTheme","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e04f08f0.chunk.js","sourcesContent":["class Auth {\n\n  /**\n   * Authenticate a user. Save a token string in Local Storage\n   *\n   * @param {string} token\n   */\n  static authenticateUser(token) {\n    localStorage.setItem('token', token);\n  }\n\n  /**\n   * Check if a user is authenticated - check if a token is saved in Local Storage\n   *\n   * @returns {boolean}\n   */\n  static isUserAuthenticated() {\n    return localStorage.getItem('token') !== null;\n  }\n\n  /**\n   * Deauthenticate a user. Remove a token from Local Storage.\n   *\n   */\n  static deauthenticateUser() {\n    localStorage.removeItem('token');\n  }\n\n  /**\n   * Get a token value.\n   *\n   * @returns {string}\n   */\n\n  static getToken() {\n    return localStorage.getItem('token');\n  }\n\n}\n\nexport default Auth;\n","import React from 'react';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\nimport Auth from '../utils/Auth';\n\nclass HomePage extends React.Component {\n\n  componentDidMount() {\n    // update authenticated state on logout\n    this.props.toggleAuthenticateStatus()\n  }\n\n  render() {\n    return (\n      <Card className=\"container\">\n        <CardHeader title=\"React Application\" subtitle=\"This is the home page.\" />\n          {Auth.isUserAuthenticated() ? (\n            <CardContent style={{ fontSize: '16px', color: 'green' }}>Welcome to the Sports App! </CardContent>\n          ) : (\n            <CardContent style={{ fontSize: '16px', color: 'green' }}>You are not logged in.</CardContent>\n          )}\n      </Card>\n    )\n  }\n};\n\nexport default HomePage;\n","import React from \"react\";\n\nimport Auth from '../utils/Auth';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Component {...props} {...rest} />\n    ) : (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n)\n\nconst LoggedOutRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    Auth.isUserAuthenticated() ? (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    ) : (\n      <Component {...props} {...rest} />\n    )\n  )}/>\n)\n\nconst PropsRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    <Component {...props} {...rest} />\n  )}/>\n)\n\nexport { PrivateRoute, LoggedOutRoute, PropsRoute };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst LoginForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  successMessage,\n  user,\n  toggleAuthenticateStatus\n}) => (\n  <Card className=\"container\">\n    <form action=\"/\" onSubmit={onSubmit}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n      <div className=\"field-line\">\n        <TextField\n          floatingLabelText=\"Email\"\n          name=\"email\"\n          errorText={errors.email}\n          onChange={onChange}\n          value={user.email}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          floatingLabelText=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n          errorText={errors.password}\n          value={user.password}\n        />\n      </div>\n\n      <div className=\"button-line\">\n        <Button type=\"submit\" label=\"Log in\" primary />\n      </div>\n\n      <CardContent>Don't have an account? <Link to={'/signup'}>Create one</Link>.</CardContent>\n    </form>\n  </Card>\n);\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  successMessage: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default LoginForm;\n","import axios from \"axios\";\n\n// authentifiaction query\nexport default {\n  login: userData => \n    axios.post(\"/auth/login\",  userData),\n  signUp: userData => \n    axios.post('/auth/signup', userData),\n  dashboard: token =>\n    axios.get('/api/dashboard', {headers: {Authorization: `bearer ${token}`}})\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Auth from '../utils/Auth';\nimport LoginForm from '../components/LoginForm.jsx';\nimport API from '../utils/API';\n\nclass LoginPage extends React.Component {\n  // set the initial component state\n  state = {\n    errors: {},\n    successMessage: '',\n    user: {\n      email: '',\n      password: ''\n    }\n  }\n  \n  componentDidMount(){\n    const storedMessage = localStorage.getItem('successMessage');\n    let successMessage = '';\n\n    if (storedMessage) {\n      successMessage = storedMessage;\n      localStorage.removeItem('successMessage');\n    }\n    this.setState({ successMessage });\n  }\n\n  componentWillUnmount(){\n    this.setState({\n          errors: {}\n        });\n  }\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n\n    // create a string for an HTTP body message\n    const { email, password } = this.state.user;\n\n    API.login({email, password}).then(res => {\n        // save the token\n        Auth.authenticateUser(res.data.token);\n\n        // update authenticated state\n        this.props.toggleAuthenticateStatus()\n        \n        // redirect signed in user to dashboard\n        this.props.history.push('/dashboard');\n        \n    }).catch(( {response} ) => {\n\n        const errors = response.data.errors ? response.data.errors : {};\n        errors.summary = response.data.message;\n\n        this.setState({\n          errors\n        });\n      });\n    \n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  changeUser = event => {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n\n    this.setState({\n      user\n    });\n  }\n\n  /**\n   * Render the component.\n   */\n  render() {\n    return (\n      <LoginForm\n        onSubmit={this.processForm}\n        onChange={this.changeUser}\n        errors={this.state.errors}\n        successMessage={this.state.successMessage}\n        user={this.state.user}\n      />\n    );\n  }\n\n}\n\nLoginPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default LoginPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Auth from '../utils/Auth';\n\n\nclass LogoutFunction extends React.Component {\n\n  componentDidMount() {\n    // deauthenticate user\n    Auth.deauthenticateUser();\n    // change the current URL to / after logout\n    this.props.history.push('/');\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Logging out...</p>\n      </div>\n    )\n  }\n}\n\nLogoutFunction.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default LogoutFunction;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst SignUpForm = ({\n  onSubmit,\n  onChange,\n  errors,\n  user,\n}) => (\n  <Card className=\"container\">\n    <form action=\"/\" onSubmit={onSubmit}>\n      <h2 className=\"card-heading\">Sign Up</h2>\n\n      {errors.summary && <p className=\"error-message\">{errors.summary}</p>}\n\n      <div className=\"field-line\">\n        <TextField\n          floatingLabelText=\"Name\"\n          name=\"name\"\n          errorText={errors.name}\n          onChange={onChange}\n          value={user.name}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          floatingLabelText=\"Email\"\n          name=\"email\"\n          errorText={errors.email}\n          onChange={onChange}\n          value={user.email}\n        />\n      </div>\n\n      <div className=\"field-line\">\n        <TextField\n          floatingLabelText=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          onChange={onChange}\n          errorText={errors.password}\n          value={user.password}\n        />\n      </div>\n\n      <div className=\"button-line\">\n      <Button variant=\"contained\" color=\"primary\">\n        Create your account\n      </Button>\n      </div>\n\n      <CardContent>Already have an account? <Link to={'/login'}>Log in</Link></CardContent>\n    </form>\n  </Card>\n);\n\nSignUpForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SignUpForm from '../components/SignUpForm.jsx';\nimport API from '../utils/API';\n\nclass SignUpPage extends React.Component {\n  // set the initial component state\n  state = {\n    errors: {},\n    user: {\n      email: '',\n      name: '',\n      password: ''\n    }\n  }\n\n  /**\n   * Process the form.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  processForm = event => {\n    // prevent default action. in this case, action is the form submission event\n    event.preventDefault();\n    \n    // create a string for an HTTP body message\n    const { name, email, password } = this.state.user;\n\n    //const formData = `email=${email}&password=${password}`;\n    API.signUp({name, email, password}).then(res => {\n      // change the component-container state\n        // set a message\n        localStorage.setItem('successMessage', res.data.message);\n\n        // redirect user after sign up to login page\n        this.props.history.push('/login');\n        this.setState({\n          errors: {}\n        });\n\n    }).catch(( {response} ) => {\n\n        const errors = response.data.errors ? response.data.errors : {};\n        errors.summary = response.data.message;\n\n        this.setState({\n          errors\n        });\n      });\n  }\n\n  /**\n   * Change the user object.\n   *\n   * @param {object} event - the JavaScript event object\n   */\n  changeUser = event => {\n    const field = event.target.name;\n    const user = this.state.user;\n    user[field] = event.target.value;\n\n    this.setState({\n      user\n    });\n  }\n\n  /**\n   * Render the component.\n   */\n  render() {\n    return (\n      <SignUpForm\n        onSubmit={this.processForm}\n        onChange={this.changeUser}\n        errors={this.state.errors}\n        user={this.state.user}\n      />\n    );\n  }\n\n}\n\nSignUpPage.contextTypes = {\n  router: PropTypes.object.isRequired\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nconst Dashboard = ({ secretData, user }) => (\n  <Card className=\"container\">\n    <CardHeader\n      title=\"Dashboard\"\n      subtitle=\"You should get access to this page only after authentication.\"\n    />\n  {secretData && <CardContent style={{ fontSize: '16px', color: 'green' }}>Welcome <strong>{user.name}</strong>!<br />{secretData}</CardContent>}\n  </Card>\n);\n\nDashboard.propTypes = {\n  secretData: PropTypes.string.isRequired\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport Auth from '../utils/Auth';\nimport Dashboard from '../components/Dashboard.jsx';\nimport API from '../utils/API';\n\nclass DashboardPage extends React.Component {\n  state = {\n    secretData: '',\n    user: {}\n  }\n\n  /**\n   * This method will be executed after initial rendering.\n   */\n  componentDidMount() {\n    API.dashboard(Auth.getToken())\n    .then(res => {\n      this.setState({\n          secretData: res.data.message,\n          user: res.data.user\n        });\n    })\n  }\n\n  /**\n   * Render the component.\n   */\n  render() {\n    return (<Dashboard secretData={this.state.secretData} user={this.state.user} />);\n  }\n\n}\n\nexport default DashboardPage;\n","import React, { Component } from 'react';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from 'react-router-dom'\n\nimport HomePage from './components/HomePage.jsx';\nimport { \n  PrivateRoute, \n  PropsRoute, \n  LoggedOutRoute \n} from './components/Routes';\n\nimport LoginPage from './pages/LoginPage.jsx';\nimport LogoutFunction from './pages/LogoutFunction.jsx';\nimport SignUpPage from './pages/SignUpPage.jsx';\nimport DashboardPage from './pages/DashboardPage.jsx';\n\nimport Auth from './utils/Auth';\n\n\nclass App extends Component {\n\n  state = {\n    authenticated: false\n  }\n\n  componentDidMount() {\n    // check if user is logged in on refresh\n    this.toggleAuthenticateStatus()\n  }\n\n  toggleAuthenticateStatus = () => {\n    // check authenticated status and toggle state based on that\n    this.setState({ authenticated: Auth.isUserAuthenticated() })\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider muiTheme={getMuiTheme()}>\n        <Router>\n          <div>\n            <div className=\"top-bar\">\n              <div className=\"top-bar-left\">\n                <Link to=\"/\">React App</Link>\n              </div>\n              {this.state.authenticated ? (\n                <div className=\"top-bar-right\">\n                  <Link to=\"/dashboard\">Dashboard</Link>\n                  <Link to=\"/logout\">Log out</Link>\n                </div>\n              ) : (\n                <div className=\"top-bar-right\">\n                  <Link to=\"/login\">Log in</Link>\n                  <Link to=\"/signup\">Sign up</Link>\n                </div>\n              )}\n\n            </div>\n\n            <PropsRoute exact path=\"/\" component={HomePage} toggleAuthenticateStatus={this.toggleAuthenticateStatus} />\n            <PrivateRoute path=\"/dashboard\" component={DashboardPage}/>\n            <LoggedOutRoute path=\"/login\" component={LoginPage} toggleAuthenticateStatus={this.toggleAuthenticateStatus} />\n            <LoggedOutRoute path=\"/signup\" component={SignUpPage}/>\n            <Route path=\"/logout\" component={LogoutFunction}/>\n          </div>\n\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}